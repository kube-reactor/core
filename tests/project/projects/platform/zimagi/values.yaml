postgresql:
  primary:
    persistence:
      existingClaim: postgresql

redis:
  master:
    persistence:
      existingClaim: redis

image:
  pullPolicy: Never
  repository: ""
  image: zimagi
  tag: dev

pvc:
  claims:
    files: null
    postgresql:
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 10Gi
    redis:
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 10Gi

volumes:
  host:
    /usr/local/share/zimagi:
      name: app-source
      path: "${__zimagi_app_dir}"
    /usr/local/lib/zimagi:
      name: app-lib
      path: "${__zimagi_lib_dir}"

deployment:
  replicaCount: 1

  env:
    ZIMAGI_DEFAULT_RUNTIME_IMAGE: "{{ .Values.image.image }}:{{ .Values.image.tag }}"

ingress:
  className: nginx
  tls:
    - secretName: origin-cert

services:
  command-api:
    annotations:
      configmap.reloader.stakater.com/reload: global,command-api
      secret.reloader.stakater.com/reload: global
    pvc:
      mounts: null
    ingress:
      enabled: true
      hosts:
        - host: "zimagi-cmd.${PRIMARY_DOMAIN}"

  data-api:
    annotations:
      configmap.reloader.stakater.com/reload: global,data-api
      secret.reloader.stakater.com/reload: global
    pvc:
      mounts: null
    ingress:
      enabled: true
      hosts:
        - host: "zimagi-api.${PRIMARY_DOMAIN}"

  scheduler:
    annotations:
      configmap.reloader.stakater.com/reload: global,scheduler
      secret.reloader.stakater.com/reload: global
    pvc:
      mounts: null

  controller:
    annotations:
      configmap.reloader.stakater.com/reload: global,controller
      secret.reloader.stakater.com/reload: global
    pvc:
      mounts: null

  tasks:
    ingress:
      enabled: true
      hosts:
        - host: "zimagi-tasks.${PRIMARY_DOMAIN}"
