version: 2

ubuntu_amd64: &ubuntu_amd64
  resource_class: medium
  machine:
    image: ubuntu-2404:current

ubuntu_arm64: &ubuntu_arm64
  resource_class: arm.medium
  machine:
    image: ubuntu-2404:current

session_env: &session_env
  REACTOR_SHELL_OUTPUT: true

  MINIKUBE_CPUS: 2
  MINIKUBE_MEMORY: 6144

test_default: &test_default
  steps:
    - checkout
    - run:
        name: Test Local Reactor Deployment Lifecycle
        command: ./bin/reactor test --name=test
        shell: /usr/bin/bash
        environment: *session_env

test_package: &test_package
  steps:
    - run:
        name: Install Kubectl CLI
        shell: /usr/bin/bash
        command: |
          ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')"
          cd "$(mktemp -d)"
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/${ARCH}/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - run:
        name: Install Kubectl Krew plugin
        shell: /usr/bin/bash
        command: |
          OS="$(uname | tr '[:upper:]' '[:lower:]')"
          ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')"
          cd "$(mktemp -d)"
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-${OS}_${ARCH}.tar.gz"
          tar zxvf "krew-${OS}_${ARCH}.tar.gz"
          ./"krew-${OS}_${ARCH}" install krew
          echo 'export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"' >> $BASH_ENV

    - checkout
    - run:
        name: Test Reactor Krew Plugin packaging and installation
        shell: /usr/bin/bash
        command: |
          kubectl version --client
          kubectl krew version
          ./tests/test_package.sh

jobs:
  test-amd64-ubuntu-default:
    <<: [*ubuntu_amd64, *test_default]

  test-arm64-ubuntu-default:
    <<: [*ubuntu_arm64, *test_default]

  test-amd64-ubuntu-package:
    <<: [*ubuntu_amd64, *test_package]

  test-arm64-ubuntu-package:
    <<: [*ubuntu_arm64, *test_package]

  deploy-docs:
    docker:
      - image: python:3.10
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:Et02GjIRCFTsh5JKh7j9STKDqFmdx3S2RYTiTNooa+Q"
      - run:
          name: Install core dependencies
          command: |
            apt-get update
            apt-get install -y git g++ gcc make

      - checkout
      - run:
          name: Install documentation dependencies
          command: pip install --no-cache-dir -r ./docs/requirements.txt

      - run:
          name: Deploy documentation
          command: |
            git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
            git config --global user.email "${CIRCLE_USERNAME}@main"
            ./docs/deploy.sh git@github.com:kube-reactor/core.git main

  deploy-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:iE95/6H6eI+Bv00LaLvA/DTqpOf/Qzi1ck6caPgBOsA"
      - checkout
      - run:
          name: Deploy release
          command: |
            ./package.sh
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -delete "$(cat ./VERSION)" \
                ./package
      - run:
          name: Deploy Krew Index manifest
          command: |
            VERSION="$(cat ./VERSION)"

            git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
            git config --global user.email "${CIRCLE_USERNAME}@${CIRCLE_BRANCH}"

            git clone git@github.com:kube-reactor/krew-index.git /tmp/krew-index
            cp -f ./package/reactor.yaml /tmp/krew-index/plugins/reactor.yaml

            cd /tmp/krew-index
            git add .
            git commit -m "Updating the Reactor plugin to version v${VERSION}"
            git push origin main

workflows:
  version: 2
  deploy:
    jobs:
      - test-amd64-ubuntu-default:
          filters:
            tags:
              only: /.*/

      - test-arm64-ubuntu-default:
          filters:
            tags:
              only: /.*/

      - test-amd64-ubuntu-package:
          filters:
            tags:
              only: /.*/

      - test-arm64-ubuntu-package:
          filters:
            tags:
              only: /.*/

      - deploy-docs:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - test-amd64-ubuntu-default
            - test-arm64-ubuntu-default
            - test-amd64-ubuntu-package
            - test-arm64-ubuntu-package

      - deploy-release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - test-amd64-ubuntu-default
            - test-arm64-ubuntu-default
            - test-amd64-ubuntu-package
            - test-arm64-ubuntu-package
