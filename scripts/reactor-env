#!/usr/bin/env bash
#
# Usage:
#
#  source reactor-env
#
#  > Requires: ${__script_dir}
#
#=========================================================================================
# Initialization
#
# Set the environment type to load specific variables
#
# Options:
#
#   1. min - Minimal environment that should operate across Bash and Zsh
#   2. full - Full environment that includes all utilities and commands
#
ENV_TYPE="${1:-full}"


export __home_dir="$HOME"
export __reactor_dir="$(dirname "${__script_dir}")"
export __reactor_version="$(cat -s "${__reactor_dir}/VERSION")"
export __log_file="reactor"

source "${__script_dir}/state/bootstrap.sh"

export __project_file="$(project_file "$(pwd)")"

if [ -z "${__project_file}" ]; then
    echo "Project directory with a 'reactor.yml' file does not exist in current or parent directories"
    exit 1
fi

export __project_dir="$(dirname "${__project_file}")"
export __environment="${REACTOR_ENV:-local}"
export __env_dir="${__project_dir}/env/${__environment}"


# Load environment configuration
if [ -f "${__env_dir}/public.sh" ]; then
  source "${__env_dir}/public.sh"
fi
if [ -f "${__env_dir}/secret.sh" ]; then
  source "${__env_dir}/secret.sh"
fi
source "${__script_dir}/state/initialize.sh"

CLI_UTILITIES="${__script_dir}/utilities/cli.sh"
source "$CLI_UTILITIES"

DISK_UTILITIES="${__script_dir}/utilities/disk.sh"
source "$DISK_UTILITIES"

if [ "$ENV_TYPE" == "full" ]; then
  for file in "${__script_dir}/utilities"/*.sh; do
    if [[ "$file" != "$CLI_UTILITIES" ]] && [[ "$file" != "$DISK_UTILITIES" ]]; then
      source "$file"
    fi
  done
  for project in $(config docker); do
    project_dir="${__docker_dir}/${project}"
    utilities_dir="${project_dir}/reactor/utilities"
    if [ -d "$utilities_dir" ]; then
      for file in "${utilities_dir}"/*.sh; do
        source "$file"
      done
    fi
  done
  for chart in $(config charts); do
    chart_dir="${__charts_dir}/${chart}"
    utilities_dir="${chart_dir}/reactor/utilities"
    if [ -d "$utilities_dir" ]; then
      for file in "${utilities_dir}"/*.sh; do
        source "$file"
      done
    fi
  done
  if [ -d "${__project_utilities_dir}" ]; then
    for file in "${__project_utilities_dir}"/*.sh; do
      source "$file"
    done
  fi

  for file in "${__script_dir}/commands"/*.sh; do
    source "$file"
  done
  for project in $(config docker); do
    project_dir="${__docker_dir}/${project}"
    commands_dir="${project_dir}/reactor/commands"
    if [ -d "$commands_dir" ]; then
      for file in "${commands_dir}"/*.sh; do
        source "$file"
      done
    fi
  done
  for chart in $(config charts); do
    chart_dir="${__charts_dir}/${chart}"
    commands_dir="${chart_dir}/reactor/commands"
    if [ -d "$commands_dir" ]; then
      for file in "${commands_dir}"/*.sh; do
        source "$file"
      done
    fi
  done
  if [ -d "${__project_commands_dir}" ]; then
    for file in "${__project_commands_dir}"/*.sh; do
      source "$file"
    done
  fi
fi