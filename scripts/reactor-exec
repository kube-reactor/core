#!/usr/bin/env bash
#
# Usage:
#
#  reactor-exec [flags] <command> [args] [flags/options]
#
#=========================================================================================
# Initialization
#

# Initialize top level directories and load bootstrap functions
SCRIPT_PATH="${BASH_SOURCE[0]}" # bash
if [[ -z "$SCRIPT_PATH" ]]; then
  SCRIPT_PATH="${(%):-%N}" # zsh
fi

export __script_name="${__script_name:-$(basename "${SCRIPT_PATH//-/ }")}"
export __script_dir="$(cd "$(dirname "${SCRIPT_PATH}")" && pwd)"
source "${__script_dir}/reactor-env"

echo "" >"$(logfile)"
debug "====================================================================="
debug "Command: $@"
debug "====================================================================="
debug ""

debug "Environment Variables"
debug "======================================"
debug "$(env)"
debug ""

debug "Processing Arguments"
debug "======================================"
reactor_args "$@"

#
#=========================================================================================
# Execution
#

if [[ "$arg_h" ]] || [[ ${#__app_args[@]} -eq 0 ]]; then
  if [[ ${#__app_args[@]} -gt 0 ]] && [[ "${__app_args[0]}" =~ ^[^-] ]]; then
    if function_exists "${__app_args[0]}_description"; then
      "${__app_args[0]}_description" >/dev/null 2>&1
      if [ -z "${PASSTHROUGH:-}" ]; then
        generate_command_help "${__app_args[0]}"
      fi
    fi
  else
    usage
  fi
fi

COMMAND="${__app_args[0]}"
COMMAND_ARGS=("${__app_args[@]:1}")
COMMAND_FUNCTION="${COMMAND}_command"

if [ "$COMMAND" == "help" ]; then
  if [[ ${#COMMAND_ARGS[@]} -eq 0 ]]; then
    usage
  else
    generate_command_help "${COMMAND_ARGS[0]}"
  fi
fi

if function_exists $COMMAND_FUNCTION; then
  pop_arg_command
  parse_environment "$COMMAND"

  COMMAND_INIT_FUNCTION="${COMMAND_FUNCTION}_init"
  COMMAND_EXIT_FUNCTION="${COMMAND_FUNCTION}_exit"

  if function_exists $COMMAND_INIT_FUNCTION; then
    $COMMAND_INIT_FUNCTION "${COMMAND_ARGS[@]:-}"
  fi

  $COMMAND_FUNCTION "${COMMAND_ARGS[@]:-}"

  if function_exists $COMMAND_EXIT_FUNCTION; then
    $COMMAND_EXIT_FUNCTION "${COMMAND_ARGS[@]:-}"
  fi

  # Source finalization scripts
  exec_hook finalize
else
  error "Unknown command: ${COMMAND}"
  usage
fi
