#!/usr/bin/env bash
#
# Usage:
#
#  reactor-build
#
#=========================================================================================
# Initialization
#
# Initialize top level directories and load bootstrap functions
SCRIPT_PATH="${BASH_SOURCE[0]}" # bash
if [[ -z "$SCRIPT_PATH" ]]; then
  SCRIPT_PATH="${(%):-%N}" # zsh
fi

((return 0 2>/dev/null) || [[ $ZSH_EVAL_CONTEXT =~ :file$ ]]) && SOURCED=1 || SOURCED=0

export __script_dir="$(cd "$(dirname "${SCRIPT_PATH}")" && pwd)"
export __reactor_dir="$(dirname "${__script_dir}")"
export __reactor_docker_dir="${__reactor_dir}/docker"

source "${__script_dir}/reactor-env"

if [[ $SOURCED -eq 1 ]]; then
  # script is being sourced
  return
fi

export REACTOR_IMAGE="${REACTOR_IMAGE:-$APP_NAME}"
export REACTOR_TAG="${REACTOR_TAG:-"${__reactor_version}"}"

export REACTOR_PARENT_IMAGE="${REACTOR_PARENT_IMAGE:-"ubuntu:22.04"}"


info "Checking development software requirements ..."
check_binary python3 1>>"$(logfile)" 2>&1
check_binary docker 1>>"$(logfile)" 2>&1
check_binary git 1>>"$(logfile)" 2>&1
check_binary curl 1>>"$(logfile)" 2>&1
check_binary openssl 1>>"$(logfile)" 2>&1

info "Removing existing Docker image: ${REACTOR_IMAGE}:${REACTOR_TAG}"
docker image rm "${REACTOR_IMAGE}:${REACTOR_TAG}" 2>/dev/null

info "Building Docker image: ${REACTOR_IMAGE}:${REACTOR_TAG}"
rm -Rf "${__reactor_dir}/project"
mkdir -p "${__reactor_dir}/project"

if [ -f "${__project_dir}/reactor/requirements.txt" ]; then
  cp -f "${__project_dir}/reactor/requirements.txt" "${__reactor_dir}/project/requirements.txt"
fi
if [ -f "${__project_dir}/reactor/install.sh" ]; then
  cp -f "${__project_dir}/reactor/install.sh" "${__reactor_dir}/project/install.sh"
fi

if [ -z ${REACTOR_DOCKER_BUILD_ARGS+x} ]; then
  export REACTOR_DOCKER_BUILD_ARGS=()
fi

REACTOR_ARGS=(
  "--force-rm"
  "--no-cache"
  "--file" "${__reactor_docker_dir}/Dockerfile"
  "--tag" "${REACTOR_IMAGE}:${REACTOR_TAG}"
  "--platform" "linux/${__architecture}"
  "--build-arg" "REACTOR_PARENT_IMAGE"
  "--build-arg" "REACTOR_ARCHITECTURE=${__architecture}"
  "--build-arg" "REACTOR_USER_NAME=${__user_name}"
  "--build-arg" "REACTOR_USER_UID=${__user_id}"
  "--build-arg" "REACTOR_DOCKER_GID=${__docker_group_id}"
)

REACTOR_ARGS=(
  "${REACTOR_ARGS[@]}"
  "${REACTOR_DOCKER_BUILD_ARGS[@]}"
  "${__reactor_dir}"
)

debug "Reactor Arguments: ${REACTOR_ARGS[@]}"
docker build "${REACTOR_ARGS[@]}"
rm -Rf "${__reactor_dir}/project"
