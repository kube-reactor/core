apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: reactor

spec:
  version: "!!!VERSION!!!"
  homepage: https://github.com/zimagi/reactor
  shortDescription: "Kubectl plugin for managing development Kubernetes clusters"
  description: |
    Facilitates the creation and initialization, the runtime management, and the
    destruction and cleaning of local Minikube Kubernetes clusters.  This cluster uses
    Terraform provisioned and ArgoCD managed cluster service projects to create complete
    ready to use develop clusters that try to mimic production environment as much
    as possible.

  platforms:
  - selector:
      matchExpressions:
      - key: "os"
        operator: "In"
        values:
        - darwin
        - linux

    uri: "https://github.com/zimagi/reactor/releases/download/!!!VERSION!!!/reactor.tar.gz"
    sha256: "!!!SHA256!!!"

    bin: "./kubectl-reactor"
    files:
    - from: "reactor-*/scripts/kubectl-reactor"
      to: "./kubectl-reactor"

    - from: "reactor-*/scripts/reactor"
      to: "./reactor"
    - from: "reactor-*/scripts/reactor-build"
      to: "./reactor-build"
    - from: "reactor-*/scripts/reactor-env"
      to: "./reactor-env"
    - from: "reactor-*/scripts/reactor-exec"
      to: "./reactor-exec"

    - from: "reactor-*/scripts/state/bootstrap.sh"
      to: "./state/bootstrap.sh"
    - from: "reactor-*/scripts/state/initialize.sh"
      to: "./state/initialize.sh"

    - from: "reactor-*/scripts/commands/argocd.sh"
      to: "./commands/argocd.sh"
    - from: "reactor-*/scripts/commands/build.sh"
      to: "./commands/build.sh"
    - from: "reactor-*/scripts/commands/certs.sh"
      to: "./commands/certs.sh"
    - from: "reactor-*/scripts/commands/clean.sh"
      to: "./commands/clean.sh"
    - from: "reactor-*/scripts/commands/create.sh"
      to: "./commands/create.sh"
    - from: "reactor-*/scripts/commands/dashboard.sh"
      to: "./commands/dashboard.sh"
    - from: "reactor-*/scripts/commands/destroy.sh"
      to: "./commands/destroy.sh"
    - from: "reactor-*/scripts/commands/down.sh"
      to: "./commands/down.sh"
    - from: "reactor-*/scripts/commands/helm.sh"
      to: "./commands/helm.sh"
    - from: "reactor-*/scripts/commands/launch.sh"
      to: "./commands/launch.sh"
    - from: "reactor-*/scripts/commands/shell.sh"
      to: "./commands/shell.sh"
    - from: "reactor-*/scripts/commands/sys.sh"
      to: "./commands/sys.sh"
    - from: "reactor-*/scripts/commands/terminate.sh"
      to: "./commands/terminate.sh"
    - from: "reactor-*/scripts/commands/up.sh"
      to: "./commands/up.sh"
    - from: "reactor-*/scripts/commands/update.sh"
      to: "./commands/update.sh"

    - from: "reactor-*/scripts/utilities/argocd.sh"
      to: "./utilities/argocd.sh"
    - from: "reactor-*/scripts/utilities/args.sh"
      to: "./utilities/args.sh"
    - from: "reactor-*/scripts/utilities/cert.sh"
      to: "./utilities/cert.sh"
    - from: "reactor-*/scripts/utilities/cli.sh"
      to: "./utilities/cli.sh"
    - from: "reactor-*/scripts/utilities/disk.sh"
      to: "./utilities/disk.sh"
    - from: "reactor-*/scripts/utilities/dns.sh"
      to: "./utilities/dns.sh"
    - from: "reactor-*/scripts/utilities/docker.sh"
      to: "./utilities/docker.sh"
    - from: "reactor-*/scripts/utilities/env_json.py"
      to: "./utilities/env_json.py"
    - from: "reactor-*/scripts/utilities/env.sh"
      to: "./utilities/env.sh"
    - from: "reactor-*/scripts/utilities/helm.sh"
      to: "./utilities/helm.sh"
    - from: "reactor-*/scripts/utilities/hooks.sh"
      to: "./utilities/hooks.sh"
    - from: "reactor-*/scripts/utilities/locator.py"
      to: "./utilities/locator.py"
    - from: "reactor-*/scripts/utilities/minikube.sh"
      to: "./utilities/minikube.sh"
    - from: "reactor-*/scripts/utilities/terraform.sh"
      to: "./utilities/terraform.sh"

    - from: "LICENSE"
      to: "./LICENSE"
    - from: "VERSION"
      to: "./VERSION"
    - from: "requirements.txt"
      to: "./requirements.txt"
